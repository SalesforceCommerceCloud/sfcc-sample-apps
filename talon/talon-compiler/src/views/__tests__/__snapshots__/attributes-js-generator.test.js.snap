// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`attributes-js-generator generateAttributesJS generates the right javascript for attribute set with {!expressions} 1`] = `
"(cmp) => ({
    \\"xfoo_0\\": {
        \\"0\\": (cmp.routeParams[\\"recordId\\"] || ''),
        \\"1\\": (cmp.routeParams[\\"whitespacePrefixPostfixAllowed\\"] || ''),
        \\"2\\": (cmp.routeParams[\\"underscores_are_allowed\\"] || ''),
        \\"3\\": (cmp.routeParams[\\"periods.are.allowed\\"] || ''),
        \\"4\\": (cmp.routeParams[\\"09812309123\\"] || ''),
        \\"5\\": (cmp.routeParams[\\"09_.1enmixed0_.aSS\\"] || '')
    }
})"
`;

exports[`attributes-js-generator generateAttributesJS generates the right javascript for attribute set with embedded {!expressions} 1`] = `
"(cmp) => ({
    \\"xfoo_0\\": {
        \\"0\\": \\"   \\" + (cmp.routeParams[\\"recordId\\"] || '') + \\"   \\",
        \\"1\\": \\"prefix \\" + (cmp.routeParams[\\"recordId\\"] || ''),
        \\"2\\": (cmp.routeParams[\\"recordId\\"] || '') + \\" postfix\\",
        \\"3\\": \\"prefix\\" + (cmp.routeParams[\\"recordId\\"] || '') + \\"postfix\\",
        \\"4\\": \\"a\\" + (cmp.routeParams[\\"recordId\\"] || '') + \\"b\\" + (cmp.routeParams[\\"userId\\"] || '') + \\"c\\" + (cmp.routeParams[\\"recordId\\"] || '') + \\"d\\",
        \\"5\\": (cmp.routeParams[\\"recordId\\"] || '') + (cmp.routeParams[\\"userId\\"] || ''),
        \\"6\\": \\" \\\\\\"escaped\\\\\\" \\\\\\"\\" + (cmp.routeParams[\\"recordId\\"] || '') + \\"\\\\\\"\\",
        \\"7\\": \\"{!\\" + (cmp.routeParams[\\"recordId\\"] || '') + \\"}\\",
        \\"8\\": \\"{!\\" + (cmp.routeParams[\\"recor\\"] || '') + \\"dId}\\"
    }
})"
`;

exports[`attributes-js-generator generateAttributesJS generates the right javascript for attribute set with empty component maps 1`] = `"(cmp) => ({})"`;

exports[`attributes-js-generator generateAttributesJS generates the right javascript for attribute set with literals 1`] = `
"(cmp) => ({
    \\"xfoo_0\\": {
        \\"0\\": null,
        \\"1\\": true,
        \\"2\\": false,
        \\"3\\": -1.5,
        \\"4\\": 3.14,
        \\"5\\": 420,
        \\"6\\": \\"\\",
        \\"7\\": \\"foo\\",
        \\"8\\": \\"escaped 'single' quotes\\",
        \\"9\\": \\"escaped \\\\\\"double\\\\\\" quotes\\",
        \\"10\\": \\"\\\\\\\\\\",
        \\"11\\": {},
        \\"12\\": {
            \\"notEvaluated\\": \\"{!recordId}\\"
        },
        \\"13\\": {
            \\"a\\": \\"b\\",
            \\"c\\": {
                \\"d\\": true
            },
            \\"e\\": 3.14,
            \\"f g\\": {}
        },
        \\"14\\": [],
        \\"15\\": [1],
        \\"16\\": [1, false, null, \\"{!ignored}\\", [], {},
            [3.14]
        ],
        \\"17\\": \\"{ !expressionsStartWithCurlyBang }\\",
        \\"18\\": \\"{! hyphens-not-allowed }\\",
        \\"19\\": \\"{!}\\",
        \\"20\\": \\"{!noEndingBrace\\"
    }
})"
`;

exports[`attributes-js-generator generateAttributesJS generates the right javascript for empty attribute set 1`] = `"(cmp) => ({})"`;

exports[`attributes-js-generator generateAttributesJS generates the right javascript for mixed attribute set 1`] = `
"(cmp) => ({
    \\"xliterals_0\\": {
        \\"str\\": \\"foo\\",
        \\"bool\\": true
    },
    \\"xexpressions_1\\": {
        \\"recordId\\": (cmp.routeParams[\\"recordId\\"] || ''),
        \\"userId\\": (cmp.routeParams[\\"myValue\\"] || '')
    },
    \\"xmixed_2\\": {
        \\"literal\\": \\"literal\\",
        \\"exprAttr\\": (cmp.routeParams[\\"retVal\\"] || ''),
        \\"literal2\\": \\"literal2\\"
    },
    \\"xsingle-expression_3\\": {
        \\"userId\\": (cmp.routeParams[\\"myValue\\"] || '')
    },
    \\"xsingle-literal_4\\": {
        \\"one\\": \\"attribute\\"
    },
    \\"xembedded-expressions_6\\": {
        \\"complexAttr\\": \\"prefix \\" + (cmp.routeParams[\\"recordId\\"] || '') + \\" postfix\\"
    }
})"
`;
